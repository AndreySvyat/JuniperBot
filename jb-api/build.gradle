/*
 * This file is part of JuniperBot.
 *
 * JuniperBot is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JuniperBot is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JuniperBot. If not, see <http://www.gnu.org/licenses/>.
 */
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'application'
apply plugin: 'org.springframework.boot'

description = 'JuniperBot Discord Bot Web Application'

ext {
    moduleName = 'JuniperBot-Web'
}

mainClassName = 'ru.juniperbot.api.Launcher'

bootJar {
    archiveFileName = "JuniperBot-API.jar"
}

dependencies {

    implementation project(':jb-common')
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-acl"
    implementation "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:$springBootVersion"

    implementation "org.glassfish.main.external:jmxremote_optional-repackaged:$jmxRemote"
    implementation "org.glassfish.external:opendmk_jmxremote_optional_jar:$jmxRemoteLegacy"

    implementation "org.openpnp:opencv:${opencvVersion}-0"
    implementation "org.opencv:opencv:$opencvVersion"

    // SOCIAL DEPENDENCIES
    implementation ("com.github.twitch4j:twitch4j:$twitch4jVersion") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
    }
    implementation "com.vk.api:sdk:$vkSdkVersion"
    implementation "com.rometools:rome:$romeVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"

}

processResources {
    filesMatching("**/application.yml") {
        filter ReplaceTokens, tokens: [
                "build.version"     : project.version,
                "build.timestamp"   : System.currentTimeMillis() + '',
                "JDA.version"       : jdaVersion,
                "lavaplayer.version": lavaplayerVersion,
                "spring.version"    : dependencyManagement.importedProperties['spring.version']
        ]
    }
}